Python Code:

import os
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import itertools
import collections

import tweepy as tw
import nltk
from nltk.corpus import stopwords
import re
import networkx
import textblob
from textblob import TextBlob

import warnings
warnings.filterwarnings("ignore")

sns.set(font_scale=1.5)
sns.set_style("whitegrid")

consumer_key = "TwitterAPIConsumerKey"
consumer_secret = "consumer_secret"
access_token = "access_token"
access_token_secret = "access_token_secret"

auth = tw.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tw.API(auth, wait_on_rate_limit=True)

search_words = "Company"
date_since = "2022-02-28"

tweets = tw.Cursor(api.search_tweets,
              q=search_words,
              lang="en",
              until=date_since).items(500)

# Iterate and print tweets
for tweet in tweets:
    print(tweet.text)
    
new_search = search_words + " -filter:retweets"
new_search

tweets = tw.Cursor(api.search_tweets,
                       q=new_search,
                       lang="en",
                       until=date_since).items(5000)

for tweet in tweets:
    print(tweet.text)
 

tweets= tw.Cursor(api.search_tweets, 
                           q=new_search,
                           lang="en",
                           until=date_since).items(500)

users_locs = [[tweet.user.screen_name, tweet.user.location] for tweet in tweets]
users_locs


tweet_text = pd.DataFrame(data=users_locs, 
                    columns=['user', "location"])
tweet_text

def remove_url(txt):
    return " ".join(re.sub("([^0-9A-Za-z \t])|(\w+:\/\/\S+)", "", txt).split())

search_term = "#Companyname -filter:retweets"
date_since= "2022-02-28"
tweets = tw.Cursor(api.search_tweets,
                   q=search_term,
                   lang="en",
                   until=date_since).items(50)


tweets_no_urls = [remove_url(tweet.text) for tweet in tweets]

sentiment_objects = [TextBlob(tweet) for tweet in tweets_no_urls]

sentiment_objects[0].polarity, sentiment_objects[0]

sentiment_values = [[tweet.sentiment.polarity, str(tweet)] for tweet in sentiment_objects]

sentiment_values[0]

sentiment_df = pd.DataFrame(sentiment_values, columns=["polarity", "tweet"])

sentiment_df.head()

sentiment_df.loc[sentiment_df["polarity"] < 0]

fig, ax = plt.subplots(figsize=(8, 6))


sentiment_df.hist(bins=[-1, -0.75, -0.5, -0.25, 0.25, 0.5, 0.75, 1],
             ax=ax,
             color="purple")

plt.title("Sentiments from Tweets on Companyname")
plt.show()

sentiment_df = sentiment_df[sentiment_df.polarity != 0]
fig, ax = plt.subplots(figsize=(8, 6))


sentiment_df.hist(bins=[-1, -0.75, -0.5, -0.25, 0.0, 0.25, 0.5, 0.75, 1],
             ax=ax,
             color="purple")

plt.title("Sentiments from Tweets on Companyname")
plt.show()


